version: "3.8"

services:
  api:
    env_file: .env
    build:
      args:
        user: ${APP_USER}
        uid: ${APP_UID}
        env: ${APP_ENV}
      context: ./api
      dockerfile: Dockerfile
    image: arche_api
    ports:
      - 9000:9000
    expose:
      - 3306
      - 9000
    container_name: arche_api
    restart: unless-stopped
    tty: true
    working_dir: /var/www/api
    volumes:
      - ./api:/var/www/api
    depends_on:
      - db
    networks:
      - arche

  app:
    image: node:14.16.1-alpine3.13
    container_name: arche_app
    restart: unless-stopped
    ports:
      - 8000:8000
    expose:
      - 8000
    tty: true
    working_dir: /var/www/app
    volumes:
      - ./app:/var/www/app
    networks:
      - arche

  db:
    env_file: .env
    image: mysql:5.7
    container_name: arche_db
    restart: unless-stopped
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      SERVICES_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./config/database:/docker-entrypoint-initdb.d
    networks:
      - arche

  server:
    env_file: .env
    image: nginx:1.13-alpine
    container_name: arche_server
    restart: unless-stopped
    depends_on:
      - db
      - api
      - app
    links:
      - db
      - api
      - app
    volumes:
      - ./api:/var/www/api
      - ./app:/var/www/app
      - ./config/server/${APP_ENV}/:/etc/nginx/conf.d/
    ports:
      - ${APP_PORT}:80
    networks:
      - arche
    tty: true
    working_dir: /var/www
    user: root

networks:
  arche:
    driver: bridge
